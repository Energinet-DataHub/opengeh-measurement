# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CD

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  #
  # Build Package Matrix
  #
  ci_matrix:
    name: Build Package Matrix
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.package_matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Create Package Matrix
        id: package_matrix
        shell: python
        run: |
          import json
          import os
          import tomllib
          from pathlib import Path

          packages = Path("${{ env.PACKAGES_DIR }}").rglob("pyproject.toml")
          matrix = []
          for toml in packages:
              if str(toml.parent) == ".":
                  continue
              with open(toml, "rb") as fh:
                  data = tomllib.load(fh)
              name = data.get("project", {}).get("name")
              version = data.get("project", {}).get("version")
              project_data = {
                "name": name, 
                "version": version, 
                "path": str(toml.parent)
              }
              matrix.append(project_data)
          include_statement = json.dumps({"inputs": matrix})
          print(include_statement)
          with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
              print(f"matrix={include_statement}", file=fh)

  #
  # Deploy
  #
  cd_promote_prerelease:
    name: Test Packages
    runs-on: ubuntu-24.04
    needs: ci_matrix
    strategy:
      matrix: ${{ fromJson(needs.ci_matrix.outputs.matrix) }}
    permissions:
      contents: write
      checks: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print Inputs
        run: |
          echo "Path: ${{ matrix.inputs.path }}"
          echo "Name: ${{ matrix.inputs.name }}"

      - name: Check if ${{ matrix.inputs.name }} has changed
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            is_changed:
              - ${{ matrix.inputs.path }}/**

      - name: Promote prerelease
        uses: ./.github/actions/promote-prerelease
        if: ${{ steps.changes.outputs.is_changed == 'true' }}
        with:
          release_name_prefix: ${{ matrix.inputs.name }}

      - name: Dispatch Release
        uses: ./.github/actions/dispatch-deployment-event
        if: ${{ steps.changes.outputs.is_changed == 'true' }}
        with:
          name: ${{ matrix.inputs.name }}
          repository_name: measurements
          repository_path: ${{ vars.environment_repository_path }}
          app_id: ${{ vars.dh3serviceaccount_appid }}
          private_key: ${{ secrets.dh3serviceaccount_privatekey }}

      - name: Notify Team of Failed Deployment Dispatch
        uses: ./.github/actions/notify-team
        if: ${{ steps.changes.outputs.is_changed == 'true' && failure() }}
        with:
          team_name: Mandalorian
          subject: "Deployment dispatched: Measurements - ${{ matrix.inputs.name }}"
