# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CD

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

env:
  PACKAGES_DIR: source
  MAX_RELEASE_SEARCH_DEPTH: 1000

jobs:
  cd_reusable:
    name: Continuous Deployment
    uses: ./.github/workflows/reusable-cd.yml
    with:
      team_name: Measurements
      team_email: 18ac1620.energinet.onmicrosoft.com@emea.teams.ms
      sender_email: ${{ vars.email_internal_sender }}
      environment_repository_path: ${{ vars.environment_repository_path }}
      dh3serviceaccount_appid: ${{ vars.dh3serviceaccount_appid }}
      github_token: ${{ github.token }}
    secrets:
      dh3serviceaccount_privatekey: ${{ secrets.dh3serviceaccount_privatekey }}
      send_grid_api_key: ${{ secrets.send_grid_api_key }}
  # #
  # # Build Release Matrix
  # #
  # cd_matrix:
  #   name: Build Release Matrix
  #   runs-on: ubuntu-24.04
  #   outputs:
  #     matrix: ${{ steps.package_matrix.outputs.matrix }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Find associated pull request
  #       uses: Energinet-DataHub/.github/.github/actions/find-related-pr-number@v14
  #       id: find_pull_request
  #     - name: Set Matrix
  #       id: package_matrix
  #       env:
  #         GH_TOKEN: ${{ github.token }}
  #       run: |
  #         MATRIX=$(gh release list -L ${{ env.MAX_RELEASE_SEARCH_DEPTH }} --json isPrerelease,name -q '[.[] | select(.name | endswith("_${{ steps.find_pull_request.outputs.pull_request_number }}"))]')
  #         echo "Found matrix: $MATRIX"
  #         echo "matrix=$MATRIX" >>$GITHUB_OUTPUT
  # #
  # # Deploy
  # #
  # cd_promote_prerelease:
  #   name: Promote prerelease
  #   runs-on: ubuntu-24.04
  #   needs: ci_matrix
  #   strategy:
  #     matrix:
  #       inputs: ${{ fromJson(needs.cd_matrix.outputs.matrix) }}
  #   permissions:
  #     contents: write
  #     checks: write
  #     pull-requests: write
  #   steps:
  #     - name: Promote prerelease
  #       uses: ./.github/actions/promote-prerelease
  #       with:
  #         release_name: ${{ matrix.inputs.name }}

  #     - name: Dispatch Release
  #       uses: ./.github/actions/dispatch-deployment-event
  #       with:
  #         name: ${{ matrix.inputs.name }}
  #         repository: ${{ vars.environment_repository_path }}
  #         app_id: ${{ vars.dh3serviceaccount_appid }}
  #         private_key: ${{ secrets.dh3serviceaccount_privatekey }}

  #     - name: Notify Team of failed deployment
  #       uses: Energinet-DataHub/.github/.github/actions/send-email@v14
  #       if: ${{ failure() }}
  #       with:
  #         sendgrid-api-key: ${{ secrets.sendgrid_instance_system_notifications_api_key }}
  #         team-name: Measurements
  #         to: 18ac1620.energinet.onmicrosoft.com@emea.teams.ms
  #         from: ${{ vars.email_internal_sender }}
  #         subject: "Deployment Failed: Measurements `${{ matrix.inputs.name }}`"
