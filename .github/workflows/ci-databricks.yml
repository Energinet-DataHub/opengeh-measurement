name: CI Databricks

on:
  workflow_call:
    inputs:
      image_tag:
        type: string
        default: latest
      package_name:
        type: string
        required: true

jobs:
  uv-example:
    name: python
    runs-on: ubuntu-latest

    env:
      RELEASE_FOLDER_PATH: ${{ inputs.wheel_working_directory }}/dist
      RELEASE_VERSION: ${{ inputs.package_name }}_${{ github.event.pull_request.number }}
      RELEASE_ZIP_FILENAME: ${{ inputs.package_name }}_${{ github.event.pull_request.number }}.zip

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: |
          cd source/${{ inputs.package_name }}
          uv sync --all-extras --dev

      - uses: astral-sh/ruff-action@v2
        with:
          src: source/${{ inputs.package_name }}

      - name: Run tests
        run: |
          cd source/${{ inputs.package_name }}
          uv run pytest tests

      - name: Build Wheel
        run: |
          cd source/${{ inputs.package_name }}
          uv build

      - name: Zip files for prerelease
        uses: thedoctor0/zip-release@0.6.2
        with:
          type: zip
          filename: ${{ env.RELEASE_ZIP_FILENAME }}
          directory: ${{ env.RELEASE_FOLDER_PATH }}

      - name: Create prerelease
        uses: Energinet-Datahub/.github/.github/actions/github-create-release@v14
        with:
          repo_token: ${{ github.token }}
          automatic_release_tag: ${{ env.RELEASE_VERSION }}
          prerelease: true
          title: ${{ env.RELEASE_VERSION }}
          files: |
            ${{ env.RELEASE_FOLDER_PATH }}/${{ env.RELEASE_ZIP_FILENAME }}
