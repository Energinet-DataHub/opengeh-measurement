name: CI orchestrator

on:
  pull_request:
    branches:
      - main
  merge_group:
    types: [checks_requested]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  checks: write
  pull-requests: write

env:
  PACKAGES_DIR: source
  CORE_REGEX: opengeh_bronze|opengeh_silver|opengeh_gold
  CORE_PREFIX: core
  NONCORE_PREFIX: bundle

jobs:
  #
  # Compile Protobuf Contracts
  #
  ci_bronze_contracts:
    name: Compile Protobuf Contracts
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if contract files has changed
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            is_changed:
              - source/bronze/src/opengeh_bronze/infrastructure/contracts/**
      - name: Compile protobuf descriptor files
        uses: ./.github/actions/compile-proto
        if: ${{ steps.changes.outputs.is_changed == 'true' }}
        with:
          path: source/bronze/src/opengeh_bronze/infrastructure/contracts

  ci_reusable:
    uses: ./.github/workflows/reusable-ci.yml
    with:
      packages_directory: ${{ env.PACKAGES_DIR }}
      core_regex: ${{ env.CORE_REGEX }}
      core_prefix: ${{ env.CORE_PREFIX }}
      noncore_prefix: ${{ env.NONCORE_PREFIX }}

  #
  # Branch policy status check
  #
  allow_merge_ci_orchestrator:
    runs-on: ubuntu-24.04
    needs: [ci_bronze_contracts, ci_reusable]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"
          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
              echo "Failed"
              exit 1
          fi
